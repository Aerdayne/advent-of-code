#!/usr/bin/env ruby

YEAR = ARGV[0]
DAY = ARGV[1]
PART = ARGV[2]

PROBLEM_DIR_PATH = "#{__dir__}/../../#{YEAR}/ruby/#{DAY}"
PROBLEM_FILE_PATH = File.absolute_path(File.join(PROBLEM_DIR_PATH, 'solution.rb'))
raise ArgumentError, "No solution found for day #{DAY} of the year #{YEAR}" unless File.exist?(PROBLEM_FILE_PATH)

require 'set'
require 'ostruct'

module Utils
  class Input
    class << self
      def parse(filename: 'input.txt', with_index: true, &block)
        file = File.expand_path(filename, PROBLEM_DIR_PATH)
        enumerator = File.foreach(file)
        enumerator = enumerator.with_index if with_index
        return enumerator unless block_given?

        enumerator.each { |*args| block.call(args) }
      end
    end
  end
end

require PROBLEM_FILE_PATH

case PART
when '1'
  p Part1.new.solve
when '2'
  p Part2.new.solve
else
  puts "Part 1: #{Part1.new.solve}"
  puts "Part 2: #{Part2.new.solve}"
end
